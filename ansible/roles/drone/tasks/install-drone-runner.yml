---
# file: roles/drone/tasks/install-drone-runner.yml

- name: create file /home/kubeadmin/drone/drone-runner-role.yaml
  copy:
    content: |
      ---
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        namespace: {{ drone.runner.namespace }}
        name: drone-runner-serviceaccount
      ---
      kind: Role
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        namespace: {{ drone.runner.namespace }}
        name: drone-runner-role
      rules:
      - apiGroups:
        - ""
        resources:
        - secrets
        verbs:
        - create
        - delete
      - apiGroups:
        - ""
        resources:
        - pods
        - pods/log
        verbs:
        - get
        - create
        - delete
        - list
        - watch
        - update      
      ---
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: drone-runner-rolebinding
        namespace: {{ drone.runner.namespace }}
      subjects:
      - kind: ServiceAccount
        name: drone-runner-serviceaccount
        namespace: {{ drone.runner.namespace }}
      roleRef:
        kind: Role
        name: drone-runner-role
        apiGroup: rbac.authorization.k8s.io
    dest: /home/kubeadmin/drone/drone-runner-role.yaml
  become: true
  become_user: kubeadmin

- name: kubectl apply -f /home/kubeadmin/drone/drone-runner-role.yaml
  shell: kubectl apply -f /home/kubeadmin/drone/drone-runner-role.yaml
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/drone/drone-runner-deployment.yaml
  copy:
    content: |
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: runner
        namespace: {{ drone.runner.namespace }}
        labels:
          app.kubernetes.io/name: drone
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: drone
        template:
          metadata:
            labels:
              app.kubernetes.io/name: drone
          spec:
            containers:
            - name: drone-runner
              image: drone/drone-runner-kube:latest
              ports:
              - containerPort: 3000
              env:
              - name: DRONE_NAMESPACE_DEFAULT
                value: {{ drone.runner.namespace }}
              - name: DRONE_RPC_HOST
                value: {{ drone.ui.host }}
              - name: DRONE_RPC_PROTO
                value: https
              - name: DRONE_RPC_SKIP_VERIFY
                value: "{{ drone.runner.rpc_skip_verify }}"
              - name: DRONE_RPC_SECRET
                valueFrom:
                  secretKeyRef:
                    name: drone-rpc-secret
                    key: rpc-secret      
            serviceAccountName: drone-runner-serviceaccount
    dest: /home/kubeadmin/drone/drone-runner-deployment.yaml
  become: true
  become_user: kubeadmin
      
- name: kubectl apply -f /home/kubeadmin/drone/drone-runner-deployment.yaml
  shell: |
    kubectl apply -f /home/kubeadmin/drone/drone-runner-deployment.yaml
  become: true
  become_user: kubeadmin
