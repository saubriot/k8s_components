---
# file: roles/minio/tasks/install-ui-minio.yml

- name: create file /home/kubeadmin/cfssl/certif-ui-minio.json
  copy:
    content: |
      {
          "CN": "{{ minio.tls.minio.cn }}",
          "hosts": [
              "{{ minio.tls.minio.host }}",
          ],
          "key": {
              "algo": "rsa",
              "size": 4096
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-minio.json
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cfssl/certif-ui-minio-sign.json
  copy:
    content: |
      {
          "signing": {
              "default": {
                  "expiry": "{{ minio.tls.minio.ca.expiry }}",
                  "usages": ["key encipherment", "server auth"]
              }
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-minio-sign.json
  become: true
  become_user: kubeadmin

- name: cfssl gencert
  shell: |
    cd /home/kubeadmin/cfssl 
    cfssl gencert -ca=inter.crt -ca-key=inter.key -config=certif-ui-minio-sign.json certif-ui-minio.json | cfssljson -bare certif-ui-minio
    mv certif-ui-minio.pem certif-ui-minio.crt
    mv certif-ui-minio-key.pem certif-ui-minio.key
  become: true
  become_user: kubeadmin

- name: create secret tls-secret-minio
  shell: |
    cd /home/kubeadmin/cfssl 
    kubectl create secret tls tls-secret-minio --key ./certif-ui-minio.key --cert certif-ui-minio.crt -n {{ minio.namespace }}
  become: true
  become_user: kubeadmin


- name: create file /home/kubeadmin/minio/ingress-minio.yaml
  copy:
    content: |
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: minio-nginx
        namespace: {{ minio.namespace }}
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
          nginx.ingress.kubernetes.io/proxy-body-size: "{{ minio.ui.maxUploadSize }}"
          nginx.org/client-max-body-size: "{{ minio.ui.maxUploadSize }}"
      spec:
        tls:
        - secretName: tls-secret-minio
        rules:
        - host: {{ minio.tls.minio.host }}
          http:
            paths:
            - path: /
              backend:
                serviceName: {{ minio.helm.name }}
                servicePort: 9000   
    dest: /home/kubeadmin/minio/ingress-minio.yaml
  become: true
  become_user: kubeadmin
  when: minio.helm.tls.enabled == "true"

- name: create file /home/kubeadmin/minio/ingress-minio.yaml
  copy:
    content: |
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: minio-nginx
        namespace: {{ minio.namespace }}
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
          nginx.ingress.kubernetes.io/proxy-body-size: "{{ minio.ui.maxUploadSize }}"
          nginx.org/client-max-body-size: "{{ minio.ui.maxUploadSize }}"
      spec:
        tls:
        - secretName: tls-secret-minio
        rules:
        - host: {{ minio.tls.minio.host }}
          http:
            paths:
            - path: /
              backend:
                serviceName: {{ minio.helm.name }}
                servicePort: 9000   
    dest: /home/kubeadmin/minio/ingress-minio.yaml
  become: true
  become_user: kubeadmin
  when: minio.helm.tls.enabled == "false"

- name: kubectl apply -f /home/kubeadmin/minio/ingress-minio.yaml
  shell: |
    kubectl apply -f /home/kubeadmin/minio/ingress-minio.yaml 
  become: true
  become_user: kubeadmin
