---
# file: roles/minio/tasks/install-ui-console.yml

- name: create file /home/kubeadmin/minio/minio-console.yaml
  copy:
    content: |
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: minio-console
        namespace: {{ minio.namespace }}
      spec:
        ports:
        - name: minio-console
          port: 9090
          targetPort: 9090
        selector:
          app: minio-console
        clusterIP: None
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: minio-console
        namespace: {{ minio.namespace }}
        labels:
          app: minio-console
      spec:
        selector:
          matchLabels:
            app: minio-console
            tier: minio-console
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        template:
          metadata:
            labels:
              app: minio-console
              tier: minio-console
          spec:
            containers:
            - image: minio/console
              name: minio-console
              volumeMounts:
              - mountPath: /root/.console/certs/CAs
                name: ca-pem
                readOnly: true
              command: ["./console"]
              args: ["server"]
              env:
              - name: CONSOLE_MINIO_SERVER
                value: "https://{{ minio.helm.name }}.{{ minio.namespace }}.svc.cluster.local:9000"
              ports:
              - containerPort: 9000
                name: minio-console
            volumes:
             - name: ca-pem
               secret:
                 secretName: tls-secret-minio-local
                 defaultMode: 0400
                 items:
                 - key: ca.pem
                   path: ca.pem
    dest: /home/kubeadmin/minio/minio-console.yaml
  become: true
  become_user: kubeadmin
  when: minio.helm.tls.enabled == "true"

- name: create file /home/kubeadmin/minio/minio-console.yaml
  copy:
    content: |
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: minio-console
        namespace: {{ minio.namespace }}
      spec:
        ports:
        - name: minio-console
          port: 9090
          targetPort: 9090
        selector:
          app: minio-console
        clusterIP: None
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: minio-console
        namespace: {{ minio.namespace }}
        labels:
          app: minio-console
      spec:
        selector:
          matchLabels:
            app: minio-console
            tier: minio-console
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        template:
          metadata:
            labels:
              app: minio-console
              tier: minio-console
          spec:
            containers:
            - image: minio/console
              name: minio-console
              command: ["./console"]
              args: ["server"]
              env:
              - name: CONSOLE_MINIO_SERVER
                value: "http://{{ minio.helm.name }}.{{ minio.namespace }}.svc.cluster.local:9000"
              ports:
              - containerPort: 9000
                name: minio-console
    dest: /home/kubeadmin/minio/minio-console.yaml
  become: true
  become_user: kubeadmin
  when: minio.helm.tls.enabled == "false"

- name: kubectl apply -f /home/kubeadmin/minio/minio-console.yaml
  shell: |
    kubectl apply -f /home/kubeadmin/minio/minio-console.yaml 
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cfssl/certif-ui-console.json
  copy:
    content: |
      {
          "CN": "{{ minio.tls.console.cn }}",
          "hosts": [
              "{{ minio.tls.console.host }}",
          ],
          "key": {
              "algo": "rsa",
              "size": 4096
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-console.json
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cfssl/certif-ui-console-sign.json
  copy:
    content: |
      {
          "signing": {
              "default": {
                  "expiry": "{{ minio.tls.console.ca.expiry }}",
                  "usages": ["key encipherment", "server auth"]
              }
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-console-sign.json
  become: true
  become_user: kubeadmin

- name: cfssl gencert
  shell: |
    cd /home/kubeadmin/cfssl 
    cfssl gencert -ca=inter.crt -ca-key=inter.key -config=certif-ui-console-sign.json certif-ui-console.json | cfssljson -bare certif-ui-console
    mv certif-ui-console.pem certif-ui-console.crt
    mv certif-ui-console-key.pem certif-ui-console.key
  become: true
  become_user: kubeadmin


- name: create secret tls-secret-console
  shell: |
    cd /home/kubeadmin/cfssl 
    kubectl create secret tls tls-secret-console --key ./certif-ui-console.key --cert certif-ui-console.crt -n {{ minio.namespace }}
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/minio/ingress-console.yaml
  copy:
    content: |
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: minio-console-nginx
        namespace: {{ minio.namespace }}
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
          nginx.ingress.kubernetes.io/proxy-body-size: "{{ minio.ui.maxUploadSize }}"
          nginx.org/client-max-body-size: "{{ minio.ui.maxUploadSize }}"
      spec:
        tls:
        - secretName: tls-secret-console
        rules:
        - host: {{ minio.tls.console.host }}
          http:
            paths:
            - path: /
              backend:
                serviceName: minio-console
                servicePort: 9090   
    dest: /home/kubeadmin/minio/ingress-console.yaml
  become: true
  become_user: kubeadmin

- name: kubectl apply -f /home/kubeadmin/minio/ingress-console.yaml
  shell: |
    kubectl apply -f /home/kubeadmin/minio/ingress-console.yaml 
  become: true
  become_user: kubeadmin

