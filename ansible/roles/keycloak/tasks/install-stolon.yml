---
# file: roles/keycloak/tasks/install-stolon.yml

- name: "label nodes {{ keycloak.stolon.affinity.keeper.label }}"
  shell: |
    kubectl label nodes {{ item }} {{ keycloak.stolon.affinity.keeper.label }}= --overwrite
  become: true
  become_user: kubeadmin
  vars:
  with_items: "{{ keycloak.stolon.affinity.keeper.nodes }}"
  when: keycloak.stolon.affinity.enabled

- name: "label nodes {{ keycloak.stolon.affinity.proxy.label }}"
  shell: |
    kubectl label nodes {{ item }} {{ keycloak.stolon.affinity.proxy.label }}= --overwrite
  become: true
  become_user: kubeadmin
  vars:
  with_items: "{{ keycloak.stolon.affinity.proxy.nodes }}"
  when: keycloak.stolon.affinity.enabled

- name: "label nodes {{ keycloak.stolon.affinity.sentinel.label }}"
  shell: |
    kubectl label nodes {{ item }} {{ keycloak.stolon.affinity.sentinel.label }}= --overwrite
  become: true
  become_user: kubeadmin
  vars:
  with_items: "{{ keycloak.stolon.affinity.sentinel.nodes }}"
  when: keycloak.stolon.affinity.enabled

- name: mkdir folder /home/kubeadmin/keycloak/stolon
  file:
    path: /home/kubeadmin/keycloak/stolon
    state: directory
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/keycloak/stolon/config.yaml
  copy:
    content: |
      superuserUsername: {{ keycloak.stolon.superuserUsername }}
      superuserPassword: {{ keycloak.stolon.superuserPassword }}
      replicationPassword: {{ keycloak.stolon.replicationPassword }}
  
      persistence:
        size: {{ keycloak.stolon.persistence.size }}

      keeper:
        replicaCount: {{ keycloak.stolon.keeper.replicaCount }}

      proxy:
        replicaCount: {{ keycloak.stolon.proxy.replicaCount }}

    dest: /home/kubeadmin/keycloak/stolon/config.yaml
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/keycloak/stolon/config.yaml
  copy:
    content: |
      superuserUsername: {{ keycloak.stolon.superuserUsername }}
      superuserPassword: {{ keycloak.stolon.superuserPassword }}
      replicationPassword: {{ keycloak.stolon.replicationPassword }}
  
      persistence:
        size: {{ keycloak.stolon.persistence.size }}
        
      keeper:
        replicaCount: {{ keycloak.stolon.keeper.replicaCount }}
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: {{ keycloak.stolon.affinity.keeper.label }}
                  operator: Exists
      proxy:
        replicaCount: {{ keycloak.stolon.proxy.replicaCount }}
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: {{ keycloak.stolon.affinity.proxy.label }}
                  operator: Exists
      sentinel:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: {{ keycloak.stolon.affinity.sentinel.label }}
                  operator: Exists

    dest: /home/kubeadmin/keycloak/stolon/config.yaml
  become: true
  become_user: kubeadmin
  when: keycloak.stolon.affinity.enabled

- name: helm install stolon
  shell: |
    helm repo add kvaps https://kvaps.github.io/charts
    helm install --namespace {{ keycloak.namespace }} {{ keycloak.stolon.release }} kvaps/stolon --version {{ keycloak.stolon.helm.version }} --values /home/kubeadmin/keycloak/stolon/config.yaml
  become: true
  become_user: kubeadmin

- name: Wait for stolon pods become ready
  shell: kubectl wait --namespace={{ keycloak.namespace }} --for=condition=Ready pods --selector=app=stolon --timeout=600s
  register: stolon_pods_ready
  become: true
  become_user: kubeadmin

#- debug: var=stolon_pods_ready.stdout_lines

- name: Wait for psql connection
  shell: kubectl exec -it -n {{ keycloak.namespace }} keycloak-stolon-keeper-0  -- psql "postgresql://{{ keycloak.stolon.superuserUsername }}:{{ keycloak.stolon.superuserPassword }}@keycloak-stolon-proxy" -c "" && echo $?
  register: result
#  until: result.stdout.find("0") != -1
  until: result.stdout == "0"
  retries: 20
  delay: 10
  become: true
  become_user: kubeadmin

#- debug: var=result.stdout

- name: create database {{ keycloak.db.name }}
  shell: kubectl exec -it -n {{ keycloak.namespace }} keycloak-stolon-keeper-0  -- psql "postgresql://{{ keycloak.stolon.superuserUsername }}:{{ keycloak.stolon.superuserPassword }}@keycloak-stolon-proxy" -c "create database {{ keycloak.db.name }};"
  become: true
  become_user: kubeadmin
  ignore_errors: true

- name: create user {{ keycloak.db.user }}
  shell: kubectl exec -it -n {{ keycloak.namespace }} keycloak-stolon-keeper-0  -- psql "postgresql://{{ keycloak.stolon.superuserUsername }}:{{ keycloak.stolon.superuserPassword }}@keycloak-stolon-proxy" -c "create user {{ keycloak.db.user }} password '{{ keycloak.db.password }}';"
  become: true
  become_user: kubeadmin
  ignore_errors: true

- name: grant user {{ keycloak.db.user }} database {{ keycloak.db.name }}
  shell: kubectl exec -it -n {{ keycloak.namespace }} keycloak-stolon-keeper-0  -- psql "postgresql://{{ keycloak.stolon.superuserUsername }}:{{ keycloak.stolon.superuserPassword }}@keycloak-stolon-proxy" -c "grant all privileges on database {{ keycloak.db.name }} to {{ keycloak.db.user }};"
  become: true
  become_user: kubeadmin
  ignore_errors: true

