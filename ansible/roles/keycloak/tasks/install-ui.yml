---
# file: roles/keycloak/tasks/install-ui.yml

- name: create file /home/kubeadmin/cfssl/certif-ui-keycloak.json
  copy:
    content: |
      {
          "CN": "{{ keycloak.tls.cn }}",
          "hosts": [
              "{{ keycloak.tls.host }}",
          ],
          "key": {
              "algo": "rsa",
              "size": 4096
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-keycloak.json
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cfssl/certif-ui-keycloak-sign.json
  copy:
    content: |
      {
          "signing": {
              "default": {
                  "expiry": "{{ keycloak.tls.ca.expiry }}",
                  "usages": ["key encipherment", "server auth"]
              }
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-keycloak-sign.json
  become: true
  become_user: kubeadmin

- name: cfssl gencert
  shell: |
    cd /home/kubeadmin/cfssl 
    cfssl gencert -ca=inter.crt -ca-key=inter.key -config=certif-ui-keycloak-sign.json certif-ui-keycloak.json | cfssljson -bare certif-ui-keycloak
    mv certif-ui-keycloak.pem certif-ui-keycloak.crt
    mv certif-ui-keycloak-key.pem certif-ui-keycloak.key
  become: true
  become_user: kubeadmin

- name: create secret tls-secret-keycloak
  shell: |
    cd /home/kubeadmin/cfssl 
    kubectl create secret tls tls-secret-keycloak --key ./certif-ui-keycloak.key --cert certif-ui-keycloak.crt -n {{ keycloak.namespace }}
  become: true
  become_user: kubeadmin


- name: create file /home/kubeadmin/keycloak/ingress-keycloak.yaml
  copy:
    content: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: keycloak-nginx
        namespace: {{ keycloak.namespace }}
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      spec:
        tls:
        - secretName: tls-secret-keycloak
        rules:
        - host: {{ keycloak.tls.host }}
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: keycloak 
                  port: 
                    number: 8080
    dest: /home/kubeadmin/keycloak/ingress-keycloak.yaml
  become: true
  become_user: kubeadmin
  when: keycloak.tls.keycloak.enabled == "true"

- name: create file /home/kubeadmin/keycloak/ingress-keycloak.yaml
  copy:
    content: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: keycloak-nginx
        namespace: {{ keycloak.namespace }}
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      spec:
        tls:
        - secretName: tls-secret-keycloak
        rules:
        - host: {{ keycloak.tls.host }}
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: keycloak
                  port: 
                    number: 8080
    dest: /home/kubeadmin/keycloak/ingress-keycloak.yaml
  become: true
  become_user: kubeadmin
  when: keycloak.tls.keycloak.enabled == "false"

- name: kubectl apply -f /home/kubeadmin/keycloak/ingress-keycloak.yaml
  shell: |
    kubectl apply -f /home/kubeadmin/keycloak/ingress-keycloak.yaml 
  become: true
  become_user: kubeadmin
