---
# file: roles/prometheus/tasks/grafana-ui-install.yml

- name: create file /home/kubeadmin/cfssl/certif-ui-grafana.json
  copy:
    content: |
      {
          "CN": "{{ grafana.tls.cn }}",
          "hosts": [
              "{{ grafana.tls.host }}",
          ],
          "key": {
              "algo": "rsa",
              "size": 4096
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-grafana.json
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/cfssl/certif-ui-grafana-sign.json
  copy:
    content: |
      {
          "signing": {
              "default": {
                  "expiry": "{{ grafana.tls.ca.expiry }}",
                  "usages": ["key encipherment", "server auth"]
              }
          }
      }
    dest: /home/kubeadmin/cfssl/certif-ui-grafana-sign.json
  become: true
  become_user: kubeadmin

- name: cfssl gencert
  shell: |
    cd /home/kubeadmin/cfssl 
    cfssl gencert -ca=inter.crt -ca-key=inter.key -config=certif-ui-grafana-sign.json certif-ui-grafana.json | cfssljson -bare certif-ui-grafana
    mv certif-ui-grafana.pem certif-ui-grafana.crt
    mv certif-ui-grafana-key.pem certif-ui-grafana.key
  become: true
  become_user: kubeadmin

- name: create secret tls-secret-grafana
  shell: |
    cd /home/kubeadmin/cfssl 
    kubectl create secret tls tls-secret-grafana --key ./certif-ui-grafana.key --cert certif-ui-grafana.crt -n monitoring
  become: true
  become_user: kubeadmin

- name: create file /home/kubeadmin/prometheus/grafana-nginx.yaml
  copy:
    content: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: grafana-nginx
        namespace: monitoring
        annotations:
          kubernetes.io/ingress.class: nginx
      spec:
        tls:
        - secretName: tls-secret-grafana
        rules:
        - host: {{ grafana.tls.host }}
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: grafana
                  port: 
                    number: 3000
    dest: /home/kubeadmin/prometheus/grafana-nginx.yaml
  become: true
  become_user: kubeadmin

- name: apply ui nginx ingress
  shell: kubectl apply -f /home/kubeadmin/prometheus/grafana-nginx.yaml
  become: true
  become_user: kubeadmin
